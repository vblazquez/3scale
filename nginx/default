proxy_cache_path /var/lib/nginx/cache/datacenters levels=1:2 keys_zone=datacenterscache:8m max_size=50m;
proxy_cache_path /var/lib/nginx/cache/servers levels=1:2 keys_zone=serverscache:8m max_size=50m;
proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
proxy_cache_valid 200 302 10m;
proxy_cache_valid 404 1m;

server {
        listen 80;
        server_name servers-api.va.3sca.net;

        root /var/www/;
        ## Basic auth
        auth_basic "Password required";
        auth_basic_user_file /etc/nginx/htpasswd;

        add_header         Cache-Control public;
        proxy_redirect     off;

        ## Pass the real IP to the proxy_server
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_cache        serverscache;

        location / {
                proxy_pass http://servers-api.va.3sca.net/;
        }
        ## If it exists, return the json
        location ~* /servers(.*).json$ {
                proxy_pass http://servers-api.va.3sca.net/servers$1.json;
                break;
        }
        ## we always want a json
        location ~* /servers/(\d+) {
                proxy_pass http://servers-api.va.3sca.net/servers/$1.json;
                break;
        }
        ## we always want a json
        location /servers {
                proxy_pass http://servers-api.va.3sca.net/servers.json;
        }
}

server {
        listen 80;
        server_name datacenters-api.va.3sca.net;

        ## Basic auth
        auth_basic "Password required";
        auth_basic_user_file /etc/nginx/htpasswd;

        location / {
                add_header         Cache-Control     public;

                proxy_pass         http://datacenters-api.va.3sca.net/;
                proxy_redirect     off;

                proxy_set_header   Host              $host;
                proxy_set_header   X-Real-IP         $remote_addr;
                proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Proto $scheme;
		proxy_cache        datacenterscache;
                proxy_cache_use_stale   error timeout invalid_header;
        }
}

